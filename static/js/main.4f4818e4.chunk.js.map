{"version":3,"sources":["spotify.js","Login.js","DataLayer.js","SidebarOption.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","SidebarOption","title","Icon","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","artists","artist","album","Body","spotify","discover_weekly","description","fontsize","tracks","item","Footer","fontSize","Grid","container","spacing","xs","Slider","player","classname","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","Boolean","hostname","match","state","action","console","log","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4f4818e4.chunk.js","sourcesContent":["//https://developer.spotify.com/documentation/web-playback-sdk/quick-start///#endregion\r\n\r\nexport const authEndpoint =\r\n\"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"http://avigyanpato.github.io/Spotify_Clone/\";\r\n\r\nconst clientId=\"8127e8e5096e4ca7aad1e876c6ef3d49\";\r\n\r\nconst scopes = [\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n    return window.location.hash\r\n        .substring(1)\r\n        .split(\"&\")\r\n        .reduce((initial, item) => {\r\n            var parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n            return initial;\r\n        }, {});\r\n\r\n};\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&Scopes=${scopes.join(\"%20\"\r\n)}&response_type=token&show_dialog=true`; \r\n\r\n","import React from 'react'\r\nimport './Login.css'\r\nimport { loginUrl } from \"./spotify\";\r\n\r\nfunction Login()\r\n{\r\n    return(\r\n            <div className=\"login\">\r\n                <img\r\n                    src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n                    alt=\"\"\r\n                />\r\n                \r\n                <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n            \r\n            </div>\r\n          )\r\n}\r\n\r\nexport default Login ","import React,\r\n{createContext,\r\n useContext,\r\n useReducer\r\n} \r\nfrom \"react\";\r\n\r\nexport const DataLayerContext= createContext();\r\n\r\nexport const DataLayer = ({initialState, reducer,children }) => (\r\n        <DataLayerContext.Provider value={useReducer(reducer,initialState)}>\r\n            {children}\r\n        </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n\r\n\r\n","import React from 'react'\r\nimport \"./SidebarOption.css\"\r\nfunction SidebarOption({title,Icon}) {\r\n    return (\r\n        <div className=\"sidebarOption\">\r\n            {Icon && <Icon className=\"sidebarOption_icons\"/>}\r\n            {Icon? <h4>{title}</h4>:<p>{title}</p>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import React from 'react'\r\nimport \"./Sidebar.css\"\r\nimport SidebarOption from './SidebarOption'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useDataLayerValue } from './DataLayer';\r\nfunction Sidebar() {\r\n    const [{playlists},dispatch] = useDataLayerValue()\r\n    return (\r\n        <div className=\"side_bar\">\r\n            <img className=\"sidebar_logo\" src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\"/>\r\n            <SidebarOption Icon={HomeIcon} title=\"Home\"/>\r\n            <SidebarOption Icon={SearchIcon} title=\"Search\"/>\r\n            <SidebarOption Icon={LibraryMusicIcon }title=\"Your Library\"/>\r\n\r\n            <br/>\r\n            <strong className=\"sidebar_title\">PLAYLISTS</strong>\r\n            <hr/>\r\n        {playlists?.items?.map(playlist => (<SidebarOption title={playlist.name}/>\r\n        ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport \"./Header.css\"\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nfunction Header() {\r\n    const[{user},dispatch]= useDataLayerValue();\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header_left\">\r\n                <SearchIcon/>\r\n                <input\r\n                    placeholder=\"Search for Artists, songs, or podcasts \"\r\n                    type=\"text\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"header_right\">\r\n                <Avatar src={user?.images[0]?.url} alt=\"AP\"/>\r\n                <h4>{user?.display_name}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n\r\n","import React from 'react'\r\nimport \"./SongRow.css\";\r\nfunction SongRow({track='test'}) {\r\n    return (\r\n    <div className=\"songRow\">\r\n        \r\n    <img src=\"\" alt=\"\"/>\r\n        <div className=\"songRow_info\">\r\n            <h1>{track.name}</h1>\r\n            <p>\r\n            {track.artists.map((artist) => artist.name).join(\",\")} -{\" \"}\r\n            {track.album.name}\r\n            </p>\r\n        </div>        \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SongRow\r\n","import React from 'react'\r\nimport \"./Body.css\"\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport Header from './Header';\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport SongRow from './SongRow';\r\nfunction Body({spotify}) {\r\n    const [{discover_weekly},dispatch] = useDataLayerValue()\r\n    return (\r\n        <div className=\"body\">\r\n            <Header spotify={spotify} />\r\n            <div className=\"body_info\">\r\n                <img \r\n                    src={discover_weekly?.images[0].url} \r\n                    alt=\"\"\r\n                />\r\n                <div className=\"body_infoText\">\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Discover Weekly</h2>\r\n                    <p>{discover_weekly?.description}</p>\r\n                </div>\r\n            </div>    \r\n                <div className=\"body_songs\">\r\n                    <div className=\"body_icons\">\r\n                        <PlayCircleFilledIcon className=\"body_shuffle\"/>\r\n                        <FavoriteIcon fontsize=\"large\"/>\r\n                        <MoreHorizIcon/>\r\n                    </div>    \r\n                    {discover_weekly?.tracks.items.map((item) =>\r\n                        (\r\n                        <SongRow track={item.track}/>\r\n                    ))}\r\n\r\n\r\n                </div>\r\n        \r\n            </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Body\r\n","import React from 'react'\r\nimport \"./Footer.css\"\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer_left\">\r\n                <img className=\"footer_albumLogo\" src=\"https://upload.wikimedia.org/wikipedia/en/thumb/2/2e/Bohemian_Rhapsody_poster.png/220px-Bohemian_Rhapsody_poster.png\" alt=\"\"/>    \r\n                <div className=\"footer_songInfo\">\r\n                    <h4>Queen</h4>\r\n                    <p>Bohemian Rhapsody</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"footer_center\">\r\n                <ShuffleIcon className=\"footer_green\"/>\r\n                <SkipPreviousIcon /*onClick={skipNext}*/ className=\"footer__icon\" />\r\n                <PlayCircleOutlineIcon /*onClick={handlePlayPause}*/ fontSize=\"large\" className=\"footer__icon\"/>\r\n                <SkipNextIcon /*onClick={skipPrevious}*/ className=\"footer__icon\" />\r\n                <RepeatIcon className=\"footer_green\" />\r\n            </div>\r\n\r\n            <div className=\"footer_right\">\r\n            <Grid container spacing={2}>\r\n               <Grid item>\r\n                 <PlaylistPlayIcon />\r\n               </Grid>\r\n               <Grid item>\r\n                 <VolumeDownIcon />\r\n               </Grid>\r\n               <Grid item xs>\r\n                 <Slider  />\r\n               </Grid>\r\n            </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction player() {\r\n    return (\r\n        <div classname=\"player\">\r\n            <div className=\"player_body\">\r\n                <Sidebar/>  \r\n                <Body/>\r\n            </div>\r\n                <Footer/>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default player;\r\n","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Login from './Login'\nimport{ getTokenFromUrl} from \"./spotify\"\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport {useDataLayerValue} from \"./DataLayer\";\nimport Player from './Player'\n\nconst spotify = new SpotifyWebApi();\nfunction App() {\n  const [{user,token}, dispatch] = useDataLayerValue(); //Gets you the user from the DataLayer\n\n  //Run code based on a given condition\n  useEffect(() => {\n    const hash= getTokenFromUrl();\n    window.location.hash=\"\";\n    const _token = hash.access_token;\n\n    if(_token)\n    {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token,\n      })\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user =>\n      {\n      dispatch({\n        type: 'SET_USER',\n        user: user,\n      });\n    });\n      spotify.getUserPlaylists().then((playlists)=> {\n        dispatch({\n          type:\"SET_PLAYLISTS\",\n          playlists:playlists,\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZEVXcX9q8DVUXLtp\").then (response =>\n      {dispatch({\n        type:\"SET_DISCOVER_WEEKLY\",\n        discover_weekly:response,\n      })\n      });\n  } \n\n  }, []);\n\n  \n  return (\n        \n        <div className=\"app\">\n          {\n            token ? (\n              <Player spotify={spotify}/>\n            ) : (\n              <Login/>\n            )\n          }\n        </div> \n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n    user:null,\r\n    playlists: [],\r\n    playing: false,\r\n    item: null,\r\n    //Set token value to null after developing process is complete\r\n    //token: 'BQDhb6DZne7ZgBMmCmByCKLfZCN-0LDQFV6gv4S8zkqFbiWBfmnkM-gfrEM1Tz1C4LiEcxcq3UwOfrJrCXrba9B51FIfCvxyVPjh7WxpgfXzWCPXExnHX6_z7GxGmcMCMPEqqI7_vMY2whlVWs1grN7t8p6I8RWVJSs',\r\n};\r\n\r\nconst reducer = (state,action) => {\r\nconsole.log(action);\r\n\r\n    switch(action.type) {\r\n        case 'SET_USER':\r\n            return{\r\n                ...state,\r\n                user:action.user\r\n            }\r\n            case 'SET_TOKEN':\r\n                return{\r\n                    ...state,\r\n                    token:action.token\r\n            }\r\n            case 'SET_PLAYLISTS':\r\n                return{\r\n                    ...state,\r\n                    playlists:action.playlists\r\n            }\r\n            case 'SET_DISCOVER_WEEKLY':\r\n                return{\r\n                    ...state,\r\n                    discover_weekly:action.discover_weekly\r\n            }\r\n    default:\r\n        return state;\r\n    }\r\n}\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {DataLayer} from \"./DataLayer\";\nimport reducer, {initialState} from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}